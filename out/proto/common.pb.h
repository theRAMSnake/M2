// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_common_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMateriaMessageImpl();
void InitDefaultsMateriaMessage();
void InitDefaultsEmptyMessageImpl();
void InitDefaultsEmptyMessage();
void InitDefaultsUniqueIdImpl();
void InitDefaultsUniqueId();
void InitDefaultsIdSetImpl();
void InitDefaultsIdSet();
void InitDefaultsOperationResultMessageImpl();
void InitDefaultsOperationResultMessage();
void InitDefaultsStringMessageImpl();
void InitDefaultsStringMessage();
inline void InitDefaults() {
  InitDefaultsMateriaMessage();
  InitDefaultsEmptyMessage();
  InitDefaultsUniqueId();
  InitDefaultsIdSet();
  InitDefaultsOperationResultMessage();
  InitDefaultsStringMessage();
}
}  // namespace protobuf_common_2eproto
namespace common {
class EmptyMessage;
class EmptyMessageDefaultTypeInternal;
extern EmptyMessageDefaultTypeInternal _EmptyMessage_default_instance_;
class IdSet;
class IdSetDefaultTypeInternal;
extern IdSetDefaultTypeInternal _IdSet_default_instance_;
class MateriaMessage;
class MateriaMessageDefaultTypeInternal;
extern MateriaMessageDefaultTypeInternal _MateriaMessage_default_instance_;
class OperationResultMessage;
class OperationResultMessageDefaultTypeInternal;
extern OperationResultMessageDefaultTypeInternal _OperationResultMessage_default_instance_;
class StringMessage;
class StringMessageDefaultTypeInternal;
extern StringMessageDefaultTypeInternal _StringMessage_default_instance_;
class UniqueId;
class UniqueIdDefaultTypeInternal;
extern UniqueIdDefaultTypeInternal _UniqueId_default_instance_;
}  // namespace common
namespace common {

// ===================================================================

class MateriaMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.MateriaMessage) */ {
 public:
  MateriaMessage();
  virtual ~MateriaMessage();

  MateriaMessage(const MateriaMessage& from);

  inline MateriaMessage& operator=(const MateriaMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MateriaMessage(MateriaMessage&& from) noexcept
    : MateriaMessage() {
    *this = ::std::move(from);
  }

  inline MateriaMessage& operator=(MateriaMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MateriaMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MateriaMessage* internal_default_instance() {
    return reinterpret_cast<const MateriaMessage*>(
               &_MateriaMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MateriaMessage* other);
  friend void swap(MateriaMessage& a, MateriaMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MateriaMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  MateriaMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MateriaMessage& from);
  void MergeFrom(const MateriaMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MateriaMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from = 1;
  void clear_from();
  static const int kFromFieldNumber = 1;
  const ::std::string& from() const;
  void set_from(const ::std::string& value);
  #if LANG_CXX11
  void set_from(::std::string&& value);
  #endif
  void set_from(const char* value);
  void set_from(const char* value, size_t size);
  ::std::string* mutable_from();
  ::std::string* release_from();
  void set_allocated_from(::std::string* from);

  // string to = 2;
  void clear_to();
  static const int kToFieldNumber = 2;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  #if LANG_CXX11
  void set_to(::std::string&& value);
  #endif
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // string operationName = 3;
  void clear_operationname();
  static const int kOperationNameFieldNumber = 3;
  const ::std::string& operationname() const;
  void set_operationname(const ::std::string& value);
  #if LANG_CXX11
  void set_operationname(::std::string&& value);
  #endif
  void set_operationname(const char* value);
  void set_operationname(const char* value, size_t size);
  ::std::string* mutable_operationname();
  ::std::string* release_operationname();
  void set_allocated_operationname(::std::string* operationname);

  // string error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // bytes payload = 5;
  void clear_payload();
  static const int kPayloadFieldNumber = 5;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // int32 request_id = 6;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 6;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common.MateriaMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr operationname_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::int32 request_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_2eproto::TableStruct;
  friend void ::protobuf_common_2eproto::InitDefaultsMateriaMessageImpl();
};
// -------------------------------------------------------------------

class EmptyMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.EmptyMessage) */ {
 public:
  EmptyMessage();
  virtual ~EmptyMessage();

  EmptyMessage(const EmptyMessage& from);

  inline EmptyMessage& operator=(const EmptyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmptyMessage(EmptyMessage&& from) noexcept
    : EmptyMessage() {
    *this = ::std::move(from);
  }

  inline EmptyMessage& operator=(EmptyMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EmptyMessage* internal_default_instance() {
    return reinterpret_cast<const EmptyMessage*>(
               &_EmptyMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EmptyMessage* other);
  friend void swap(EmptyMessage& a, EmptyMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmptyMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  EmptyMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmptyMessage& from);
  void MergeFrom(const EmptyMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmptyMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:common.EmptyMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_2eproto::TableStruct;
  friend void ::protobuf_common_2eproto::InitDefaultsEmptyMessageImpl();
};
// -------------------------------------------------------------------

class UniqueId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.UniqueId) */ {
 public:
  UniqueId();
  virtual ~UniqueId();

  UniqueId(const UniqueId& from);

  inline UniqueId& operator=(const UniqueId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UniqueId(UniqueId&& from) noexcept
    : UniqueId() {
    *this = ::std::move(from);
  }

  inline UniqueId& operator=(UniqueId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UniqueId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UniqueId* internal_default_instance() {
    return reinterpret_cast<const UniqueId*>(
               &_UniqueId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UniqueId* other);
  friend void swap(UniqueId& a, UniqueId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UniqueId* New() const PROTOBUF_FINAL { return New(NULL); }

  UniqueId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UniqueId& from);
  void MergeFrom(const UniqueId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UniqueId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // @@protoc_insertion_point(class_scope:common.UniqueId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_2eproto::TableStruct;
  friend void ::protobuf_common_2eproto::InitDefaultsUniqueIdImpl();
};
// -------------------------------------------------------------------

class IdSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.IdSet) */ {
 public:
  IdSet();
  virtual ~IdSet();

  IdSet(const IdSet& from);

  inline IdSet& operator=(const IdSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdSet(IdSet&& from) noexcept
    : IdSet() {
    *this = ::std::move(from);
  }

  inline IdSet& operator=(IdSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdSet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IdSet* internal_default_instance() {
    return reinterpret_cast<const IdSet*>(
               &_IdSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(IdSet* other);
  friend void swap(IdSet& a, IdSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdSet* New() const PROTOBUF_FINAL { return New(NULL); }

  IdSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdSet& from);
  void MergeFrom(const IdSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common.UniqueId idset = 1;
  int idset_size() const;
  void clear_idset();
  static const int kIdsetFieldNumber = 1;
  const ::common::UniqueId& idset(int index) const;
  ::common::UniqueId* mutable_idset(int index);
  ::common::UniqueId* add_idset();
  ::google::protobuf::RepeatedPtrField< ::common::UniqueId >*
      mutable_idset();
  const ::google::protobuf::RepeatedPtrField< ::common::UniqueId >&
      idset() const;

  // @@protoc_insertion_point(class_scope:common.IdSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::common::UniqueId > idset_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_2eproto::TableStruct;
  friend void ::protobuf_common_2eproto::InitDefaultsIdSetImpl();
};
// -------------------------------------------------------------------

class OperationResultMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.OperationResultMessage) */ {
 public:
  OperationResultMessage();
  virtual ~OperationResultMessage();

  OperationResultMessage(const OperationResultMessage& from);

  inline OperationResultMessage& operator=(const OperationResultMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperationResultMessage(OperationResultMessage&& from) noexcept
    : OperationResultMessage() {
    *this = ::std::move(from);
  }

  inline OperationResultMessage& operator=(OperationResultMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationResultMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperationResultMessage* internal_default_instance() {
    return reinterpret_cast<const OperationResultMessage*>(
               &_OperationResultMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(OperationResultMessage* other);
  friend void swap(OperationResultMessage& a, OperationResultMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperationResultMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  OperationResultMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperationResultMessage& from);
  void MergeFrom(const OperationResultMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperationResultMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:common.OperationResultMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_2eproto::TableStruct;
  friend void ::protobuf_common_2eproto::InitDefaultsOperationResultMessageImpl();
};
// -------------------------------------------------------------------

class StringMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.StringMessage) */ {
 public:
  StringMessage();
  virtual ~StringMessage();

  StringMessage(const StringMessage& from);

  inline StringMessage& operator=(const StringMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringMessage(StringMessage&& from) noexcept
    : StringMessage() {
    *this = ::std::move(from);
  }

  inline StringMessage& operator=(StringMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringMessage* internal_default_instance() {
    return reinterpret_cast<const StringMessage*>(
               &_StringMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(StringMessage* other);
  friend void swap(StringMessage& a, StringMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  StringMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StringMessage& from);
  void MergeFrom(const StringMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StringMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:common.StringMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_2eproto::TableStruct;
  friend void ::protobuf_common_2eproto::InitDefaultsStringMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MateriaMessage

// string from = 1;
inline void MateriaMessage::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MateriaMessage::from() const {
  // @@protoc_insertion_point(field_get:common.MateriaMessage.from)
  return from_.GetNoArena();
}
inline void MateriaMessage::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.MateriaMessage.from)
}
#if LANG_CXX11
inline void MateriaMessage::set_from(::std::string&& value) {
  
  from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.MateriaMessage.from)
}
#endif
inline void MateriaMessage::set_from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.MateriaMessage.from)
}
inline void MateriaMessage::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.MateriaMessage.from)
}
inline ::std::string* MateriaMessage::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:common.MateriaMessage.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MateriaMessage::release_from() {
  // @@protoc_insertion_point(field_release:common.MateriaMessage.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MateriaMessage::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:common.MateriaMessage.from)
}

// string to = 2;
inline void MateriaMessage::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MateriaMessage::to() const {
  // @@protoc_insertion_point(field_get:common.MateriaMessage.to)
  return to_.GetNoArena();
}
inline void MateriaMessage::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.MateriaMessage.to)
}
#if LANG_CXX11
inline void MateriaMessage::set_to(::std::string&& value) {
  
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.MateriaMessage.to)
}
#endif
inline void MateriaMessage::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.MateriaMessage.to)
}
inline void MateriaMessage::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.MateriaMessage.to)
}
inline ::std::string* MateriaMessage::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:common.MateriaMessage.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MateriaMessage::release_to() {
  // @@protoc_insertion_point(field_release:common.MateriaMessage.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MateriaMessage::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:common.MateriaMessage.to)
}

// string operationName = 3;
inline void MateriaMessage::clear_operationname() {
  operationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MateriaMessage::operationname() const {
  // @@protoc_insertion_point(field_get:common.MateriaMessage.operationName)
  return operationname_.GetNoArena();
}
inline void MateriaMessage::set_operationname(const ::std::string& value) {
  
  operationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.MateriaMessage.operationName)
}
#if LANG_CXX11
inline void MateriaMessage::set_operationname(::std::string&& value) {
  
  operationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.MateriaMessage.operationName)
}
#endif
inline void MateriaMessage::set_operationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.MateriaMessage.operationName)
}
inline void MateriaMessage::set_operationname(const char* value, size_t size) {
  
  operationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.MateriaMessage.operationName)
}
inline ::std::string* MateriaMessage::mutable_operationname() {
  
  // @@protoc_insertion_point(field_mutable:common.MateriaMessage.operationName)
  return operationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MateriaMessage::release_operationname() {
  // @@protoc_insertion_point(field_release:common.MateriaMessage.operationName)
  
  return operationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MateriaMessage::set_allocated_operationname(::std::string* operationname) {
  if (operationname != NULL) {
    
  } else {
    
  }
  operationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operationname);
  // @@protoc_insertion_point(field_set_allocated:common.MateriaMessage.operationName)
}

// string error = 4;
inline void MateriaMessage::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MateriaMessage::error() const {
  // @@protoc_insertion_point(field_get:common.MateriaMessage.error)
  return error_.GetNoArena();
}
inline void MateriaMessage::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.MateriaMessage.error)
}
#if LANG_CXX11
inline void MateriaMessage::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.MateriaMessage.error)
}
#endif
inline void MateriaMessage::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.MateriaMessage.error)
}
inline void MateriaMessage::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.MateriaMessage.error)
}
inline ::std::string* MateriaMessage::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:common.MateriaMessage.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MateriaMessage::release_error() {
  // @@protoc_insertion_point(field_release:common.MateriaMessage.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MateriaMessage::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:common.MateriaMessage.error)
}

// bytes payload = 5;
inline void MateriaMessage::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MateriaMessage::payload() const {
  // @@protoc_insertion_point(field_get:common.MateriaMessage.payload)
  return payload_.GetNoArena();
}
inline void MateriaMessage::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.MateriaMessage.payload)
}
#if LANG_CXX11
inline void MateriaMessage::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.MateriaMessage.payload)
}
#endif
inline void MateriaMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.MateriaMessage.payload)
}
inline void MateriaMessage::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.MateriaMessage.payload)
}
inline ::std::string* MateriaMessage::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:common.MateriaMessage.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MateriaMessage::release_payload() {
  // @@protoc_insertion_point(field_release:common.MateriaMessage.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MateriaMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:common.MateriaMessage.payload)
}

// int32 request_id = 6;
inline void MateriaMessage::clear_request_id() {
  request_id_ = 0;
}
inline ::google::protobuf::int32 MateriaMessage::request_id() const {
  // @@protoc_insertion_point(field_get:common.MateriaMessage.request_id)
  return request_id_;
}
inline void MateriaMessage::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:common.MateriaMessage.request_id)
}

// -------------------------------------------------------------------

// EmptyMessage

// -------------------------------------------------------------------

// UniqueId

// string guid = 1;
inline void UniqueId::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UniqueId::guid() const {
  // @@protoc_insertion_point(field_get:common.UniqueId.guid)
  return guid_.GetNoArena();
}
inline void UniqueId::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.UniqueId.guid)
}
#if LANG_CXX11
inline void UniqueId::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.UniqueId.guid)
}
#endif
inline void UniqueId::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.UniqueId.guid)
}
inline void UniqueId::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.UniqueId.guid)
}
inline ::std::string* UniqueId::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:common.UniqueId.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UniqueId::release_guid() {
  // @@protoc_insertion_point(field_release:common.UniqueId.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UniqueId::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:common.UniqueId.guid)
}

// -------------------------------------------------------------------

// IdSet

// repeated .common.UniqueId idset = 1;
inline int IdSet::idset_size() const {
  return idset_.size();
}
inline void IdSet::clear_idset() {
  idset_.Clear();
}
inline const ::common::UniqueId& IdSet::idset(int index) const {
  // @@protoc_insertion_point(field_get:common.IdSet.idset)
  return idset_.Get(index);
}
inline ::common::UniqueId* IdSet::mutable_idset(int index) {
  // @@protoc_insertion_point(field_mutable:common.IdSet.idset)
  return idset_.Mutable(index);
}
inline ::common::UniqueId* IdSet::add_idset() {
  // @@protoc_insertion_point(field_add:common.IdSet.idset)
  return idset_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common::UniqueId >*
IdSet::mutable_idset() {
  // @@protoc_insertion_point(field_mutable_list:common.IdSet.idset)
  return &idset_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common::UniqueId >&
IdSet::idset() const {
  // @@protoc_insertion_point(field_list:common.IdSet.idset)
  return idset_;
}

// -------------------------------------------------------------------

// OperationResultMessage

// bool success = 1;
inline void OperationResultMessage::clear_success() {
  success_ = false;
}
inline bool OperationResultMessage::success() const {
  // @@protoc_insertion_point(field_get:common.OperationResultMessage.success)
  return success_;
}
inline void OperationResultMessage::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:common.OperationResultMessage.success)
}

// -------------------------------------------------------------------

// StringMessage

// string content = 1;
inline void StringMessage::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StringMessage::content() const {
  // @@protoc_insertion_point(field_get:common.StringMessage.content)
  return content_.GetNoArena();
}
inline void StringMessage::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common.StringMessage.content)
}
#if LANG_CXX11
inline void StringMessage::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common.StringMessage.content)
}
#endif
inline void StringMessage::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common.StringMessage.content)
}
inline void StringMessage::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common.StringMessage.content)
}
inline ::std::string* StringMessage::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:common.StringMessage.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringMessage::release_content() {
  // @@protoc_insertion_point(field_release:common.StringMessage.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringMessage::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:common.StringMessage.content)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: admin.proto

#ifndef PROTOBUF_admin_2eproto__INCLUDED
#define PROTOBUF_admin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_admin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsComponentInfoImpl();
void InitDefaultsComponentInfo();
void InitDefaultsComponentInfoResponceImpl();
void InitDefaultsComponentInfoResponce();
inline void InitDefaults() {
  InitDefaultsComponentInfo();
  InitDefaultsComponentInfoResponce();
}
}  // namespace protobuf_admin_2eproto
namespace admin {
class ComponentInfo;
class ComponentInfoDefaultTypeInternal;
extern ComponentInfoDefaultTypeInternal _ComponentInfo_default_instance_;
class ComponentInfoResponce;
class ComponentInfoResponceDefaultTypeInternal;
extern ComponentInfoResponceDefaultTypeInternal _ComponentInfoResponce_default_instance_;
}  // namespace admin
namespace admin {

// ===================================================================

class ComponentInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:admin.ComponentInfo) */ {
 public:
  ComponentInfo();
  virtual ~ComponentInfo();

  ComponentInfo(const ComponentInfo& from);

  inline ComponentInfo& operator=(const ComponentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentInfo(ComponentInfo&& from) noexcept
    : ComponentInfo() {
    *this = ::std::move(from);
  }

  inline ComponentInfo& operator=(ComponentInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentInfo* internal_default_instance() {
    return reinterpret_cast<const ComponentInfo*>(
               &_ComponentInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ComponentInfo* other);
  friend void swap(ComponentInfo& a, ComponentInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ComponentInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComponentInfo& from);
  void MergeFrom(const ComponentInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComponentInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bool status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:admin.ComponentInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool status_;
  mutable int _cached_size_;
  friend struct ::protobuf_admin_2eproto::TableStruct;
  friend void ::protobuf_admin_2eproto::InitDefaultsComponentInfoImpl();
};
// -------------------------------------------------------------------

class ComponentInfoResponce : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:admin.ComponentInfoResponce) */ {
 public:
  ComponentInfoResponce();
  virtual ~ComponentInfoResponce();

  ComponentInfoResponce(const ComponentInfoResponce& from);

  inline ComponentInfoResponce& operator=(const ComponentInfoResponce& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentInfoResponce(ComponentInfoResponce&& from) noexcept
    : ComponentInfoResponce() {
    *this = ::std::move(from);
  }

  inline ComponentInfoResponce& operator=(ComponentInfoResponce&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentInfoResponce& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentInfoResponce* internal_default_instance() {
    return reinterpret_cast<const ComponentInfoResponce*>(
               &_ComponentInfoResponce_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ComponentInfoResponce* other);
  friend void swap(ComponentInfoResponce& a, ComponentInfoResponce& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentInfoResponce* New() const PROTOBUF_FINAL { return New(NULL); }

  ComponentInfoResponce* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComponentInfoResponce& from);
  void MergeFrom(const ComponentInfoResponce& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComponentInfoResponce* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .admin.ComponentInfo componentInfos = 1;
  int componentinfos_size() const;
  void clear_componentinfos();
  static const int kComponentInfosFieldNumber = 1;
  const ::admin::ComponentInfo& componentinfos(int index) const;
  ::admin::ComponentInfo* mutable_componentinfos(int index);
  ::admin::ComponentInfo* add_componentinfos();
  ::google::protobuf::RepeatedPtrField< ::admin::ComponentInfo >*
      mutable_componentinfos();
  const ::google::protobuf::RepeatedPtrField< ::admin::ComponentInfo >&
      componentinfos() const;

  // @@protoc_insertion_point(class_scope:admin.ComponentInfoResponce)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::admin::ComponentInfo > componentinfos_;
  mutable int _cached_size_;
  friend struct ::protobuf_admin_2eproto::TableStruct;
  friend void ::protobuf_admin_2eproto::InitDefaultsComponentInfoResponceImpl();
};
// ===================================================================

class AdminService_Stub;

class AdminService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline AdminService() {};
 public:
  virtual ~AdminService();

  typedef AdminService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetComponentInfo(::google::protobuf::RpcController* controller,
                       const ::common::EmptyMessage* request,
                       ::admin::ComponentInfoResponce* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(AdminService);
};

class AdminService_Stub : public AdminService {
 public:
  AdminService_Stub(::google::protobuf::RpcChannel* channel);
  AdminService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~AdminService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements AdminService ------------------------------------------

  void GetComponentInfo(::google::protobuf::RpcController* controller,
                       const ::common::EmptyMessage* request,
                       ::admin::ComponentInfoResponce* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(AdminService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ComponentInfo

// string name = 1;
inline void ComponentInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ComponentInfo::name() const {
  // @@protoc_insertion_point(field_get:admin.ComponentInfo.name)
  return name_.GetNoArena();
}
inline void ComponentInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:admin.ComponentInfo.name)
}
#if LANG_CXX11
inline void ComponentInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:admin.ComponentInfo.name)
}
#endif
inline void ComponentInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:admin.ComponentInfo.name)
}
inline void ComponentInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:admin.ComponentInfo.name)
}
inline ::std::string* ComponentInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:admin.ComponentInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ComponentInfo::release_name() {
  // @@protoc_insertion_point(field_release:admin.ComponentInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:admin.ComponentInfo.name)
}

// bool status = 2;
inline void ComponentInfo::clear_status() {
  status_ = false;
}
inline bool ComponentInfo::status() const {
  // @@protoc_insertion_point(field_get:admin.ComponentInfo.status)
  return status_;
}
inline void ComponentInfo::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:admin.ComponentInfo.status)
}

// -------------------------------------------------------------------

// ComponentInfoResponce

// repeated .admin.ComponentInfo componentInfos = 1;
inline int ComponentInfoResponce::componentinfos_size() const {
  return componentinfos_.size();
}
inline void ComponentInfoResponce::clear_componentinfos() {
  componentinfos_.Clear();
}
inline const ::admin::ComponentInfo& ComponentInfoResponce::componentinfos(int index) const {
  // @@protoc_insertion_point(field_get:admin.ComponentInfoResponce.componentInfos)
  return componentinfos_.Get(index);
}
inline ::admin::ComponentInfo* ComponentInfoResponce::mutable_componentinfos(int index) {
  // @@protoc_insertion_point(field_mutable:admin.ComponentInfoResponce.componentInfos)
  return componentinfos_.Mutable(index);
}
inline ::admin::ComponentInfo* ComponentInfoResponce::add_componentinfos() {
  // @@protoc_insertion_point(field_add:admin.ComponentInfoResponce.componentInfos)
  return componentinfos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::admin::ComponentInfo >*
ComponentInfoResponce::mutable_componentinfos() {
  // @@protoc_insertion_point(field_mutable_list:admin.ComponentInfoResponce.componentInfos)
  return &componentinfos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::admin::ComponentInfo >&
ComponentInfoResponce::componentinfos() const {
  // @@protoc_insertion_point(field_list:admin.ComponentInfoResponce.componentInfos)
  return componentinfos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_admin_2eproto__INCLUDED

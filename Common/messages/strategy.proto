syntax = "proto3";
option cc_generic_services = true;
option java_generic_services = true;

import "common.proto";

package strategy;

message CommonItemProperties
{
   common.UniqueId id = 1;
   string name = 4;
   string notes = 5;
}

message Goal
{
   CommonItemProperties common_props = 1;
   bool focused = 3;
   bool achieved = 4;
}

message Goals
{
   repeated Goal items = 1;
}

message Objective
{
   CommonItemProperties common_props = 1;
   common.UniqueId parent_goal_id = 2;
   bool reached = 3;
   common.UniqueId res_id = 4;
   int32 expectedtreshold = 5;
}

message Task
{
   CommonItemProperties common_props = 1;
   common.UniqueId parent_goal_id = 2;
   bool done = 3;
}

message GoalItems
{
   repeated Objective objectives = 1;
   repeated Task tasks = 2;
}

message Resource
{
   common.UniqueId id = 1;
   string name = 2;
   common.UniqueId icon_id = 3;
   int32 value = 4;
}

message Resources
{
   repeated Resource items = 1;
}

//-

message GraphObjectId
{
   common.UniqueId graphId = 1;
   common.UniqueId objectId = 2;
}

message LinkProperties
{
   common.UniqueId graphId = 1;
   common.UniqueId from_node_id = 2;
   common.UniqueId to_node_id = 3;
}

enum NodeType
{
   BLANK = 0;
   GOAL = 1;
   TASK = 2;
   COUNTER = 3;
   OBJECTIVE = 4;
   WATCH = 5;
}

message SimpleAttributes
{
   string brief = 1;
   bool done = 2;
}

message CounterAttributes
{
   string brief = 1;
   int32 current = 2;
   int32 required = 3;
}

message NodeProperties
{
   GraphObjectId id = 1;
   NodeType node_type = 2;

   SimpleAttributes simple_attrs = 3; 
   CounterAttributes counter_attrs = 4;
}

message GraphDefinition
{
   repeated LinkProperties links = 2;
   repeated NodeProperties nodes = 3;
}

service StrategyService 
{
   rpc AddGoal (Goal) returns (common.UniqueId);
   rpc ModifyGoal (Goal) returns (common.OperationResultMessage);
   rpc DeleteGoal (common.UniqueId) returns (common.OperationResultMessage);

   rpc GetGoals (common.EmptyMessage) returns (Goals);
   rpc GetGoal (common.UniqueId) returns (Goal);

   rpc AddObjective (Objective) returns (common.UniqueId);
   rpc ModifyObjective (Objective) returns (common.OperationResultMessage);
   rpc DeleteObjective (common.UniqueId) returns (common.OperationResultMessage);

   rpc AddTask (Task) returns (common.UniqueId);
   rpc ModifyTask (Task) returns (common.OperationResultMessage);
   rpc DeleteTask (common.UniqueId) returns (common.OperationResultMessage);

   rpc GetGoalItems (common.UniqueId) returns (GoalItems);

   rpc AddResource (Resource) returns (common.UniqueId);
   rpc ModifyResource (Resource) returns (common.OperationResultMessage);
   rpc DeleteResource (common.UniqueId) returns (common.OperationResultMessage);
   rpc GetResources (common.EmptyMessage) returns (Resources);

   // -v2

   rpc GetGraph (common.UniqueId) returns (GraphDefinition);

   rpc CreateLink (LinkProperties) returns (common.EmptyMessage);
   rpc CreateNode (NodeProperties) returns (common.UniqueId);
   rpc ModifyNode (NodeProperties) returns (common.OperationResultMessage);

   rpc DeleteNode (GraphObjectId) returns (common.OperationResultMessage);
   rpc DeleteLink (LinkProperties) returns (common.OperationResultMessage);
}